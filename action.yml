name: "git sync branches"
description: "Sync branches in a git repository with the goal of having the same commit history between the two."
author: "levibostian"
inputs: # https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
  ahead:
    description: "Branch that is currently ahead of the other in commit history"
    required: true
  behind:
    description: "Branch that is currently behind of the other and needs to be synced."
    required: true
  githubToken:
    description: "Personal access token for GitHub for user account that has push access to repository."
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout project code 
      uses: actions/checkout@v2
    - name: Checkout and pull branches 
      run: |
        git switch ${{ inputs.ahead }} && git pull 
        git switch ${{ inputs.behind }} && git pull 
      shell: bash 
    - name: Sync branches via rebase 
      run: git rebase ${{ inputs.ahead }}
      shell: bash  
    # Compare the two branches together. If there are not different commits between each other, the rebase was successful and we can push. Else, exit and fail. 
    # You will then have to fix the issue yourself manually. 
    - name: Push changes
      shell: bash 
      run: |
        if [[ $( git log ${{ inputs.behind }}..${{ inputs.ahead }} ) ]]; then echo "Rebase not successful. Commits not the same between the two branches" && exit 1; else echo "Rebase successful"; fi 
        git push
branding:
  icon: 'refresh-cw'  
  color: 'yellow'