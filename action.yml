name: "git sync branches"
description: "Sync branches in a git repository with the goal of having the same commit history between the two."
author: "levibostian"
inputs: # https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
  ahead:
    description: "Branch that is currently ahead of the other in commit history"
    required: true
  behind:
    description: "Branch that is currently behind of the other and needs to be synced."
    required: true
  githubToken:
    description: "Personal access token for GitHub for user account that has push access to repository."
    required: true
  skipUnlessPush:
    description: "Skip running this action unless this action is triggered by a push to the ahead branch. Default: true"
    required: true
    default: "true"
runs:
  using: "composite"
  steps:
    - run: echo 'Starting action to copy commits from ${{ inputs.ahead }} into ${{ inputs.behind }}' 
      id: should-run
      if: ${{ !inputs.skipUnlessPush || (github.event_name == 'push' && github.event.ref == 'refs/heads/inputs.ahead') }}
      shell: bash
    - run: echo 'Skipping action until commits are pushed to ${{ inputs.ahead }}. Use option skipUnlessPush to change this behavior.'       
      if: ${{ steps.should-run.conclusion != 'success' }}
      shell: bash
    - name: Checkout all branches and commits history 
      if: ${{ steps.should-run.conclusion == 'success' }}
      uses: actions/checkout@v2
      with: 
        fetch-depth: 0
    - name: Sync branches via rebase 
      if: ${{ steps.should-run.conclusion == 'success' }}
      run: ${{ github.action_path }}/action.sh ${{ inputs.ahead }} ${{ inputs.behind }}
      shell: bash 

branding:
  icon: 'refresh-cw'  
  color: 'yellow'